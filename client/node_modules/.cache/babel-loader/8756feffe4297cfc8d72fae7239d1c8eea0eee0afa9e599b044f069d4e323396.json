{"ast":null,"code":"var _jsxFileName = \"/Users/yuvrajaggarwal/Desktop/Task/yoga-admission-form/client/src/AdmissionForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n\n// const AdmissionForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     age: 0,\n//     selectedBatch: '',\n//     email: '',\n//     phoneNumber: '',\n//   });\n\n//   const [eligibilityMessage, setEligibilityMessage] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     console.log('Form Data:', formData); // Log form data\n\n//     // Validation\n//     if (!formData.name || !formData.email || !formData.phoneNumber) {\n//       setEligibilityMessage('Please fill in all required fields.');\n//       return;\n//     }\n\n//     if (formData.age < 18 || formData.age > 65) {\n//       setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n//       // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//       setTimeout(() => {\n//         setIsModalOpen(false);\n//       }, 3000);\n\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3001/submitForm', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const result = await response.json();\n\n//       // Assuming your API response structure includes a 'success' property\n//       console.log('Response:', result); // Log the response\n\n//       if (result.success) {\n//         // Payment successful logic\n//         setEligibilityMessage('Payment successful!');\n\n//         // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//         setTimeout(() => {\n//           setIsModalOpen(false);\n//         }, 3000);\n//       } else {\n//         // Payment failed logic\n//         setEligibilityMessage('Payment failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <header style={styles.header}>\n//         <h1 style={styles.title}>Yoga Class Admission App</h1>\n//         <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n//       </header>\n\n//       <div style={styles.content}>\n//         <button onClick={openModal} style={styles.modalButton}>\n//           Open 3D Form\n//         </button>\n\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={customStyles}\n//           contentLabel=\"Admission Form Modal\"\n//         >\n//           <div style={styles.modalContainer}>\n//             <h2 style={styles.modalHeading}>Admission Form</h2>\n\n//             {/* Yoga Picture */}\n//             <img\n//               src=\"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n//               alt=\"Yoga\"\n//               style={styles.yogaImage}\n//               onLoad={() => console.log('Image loaded successfully')}\n//               onError={() => console.error('Error loading image')}\n//             />\n\n//             <form onSubmit={handleSubmit} style={styles.modalForm}>\n//               <label style={styles.modalLabel}>\n//                 Name:\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Age:\n//                 <input\n//                   type=\"number\"\n//                   name=\"age\"\n//                   value={formData.age}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Email:\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Phone Number:\n//                 <input\n//                   type=\"tel\"\n//                   name=\"phoneNumber\"\n//                   value={formData.phoneNumber}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Select Batch:\n//                 <select\n//                   name=\"selectedBatch\"\n//                   value={formData.selectedBatch}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 >\n//                   <option value=\"\">Select Batch</option>\n//                   <option value=\"6-7AM\">6-7AM</option>\n//                   <option value=\"7-8AM\">7-8AM</option>\n//                   <option value=\"8-9AM\">8-9AM</option>\n//                   <option value=\"5-6PM\">5-6PM</option>\n//                 </select>\n//               </label>\n//               {eligibilityMessage && <p style={styles.modalErrorMessage}>{eligibilityMessage}</p>}\n//               <button type=\"submit\" style={styles.modalSubmitButton}>\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     backgroundColor: '#F2F2F2', // Set your desired background color\n//   },\n//   header: {\n//     textAlign: 'center',\n//     padding: '2rem',\n//     backgroundColor: '#4CAF50', // Set your desired header background color\n//     color: 'white', // Set your desired header text color\n//   },\n//   title: {\n//     fontSize: '2rem',\n//     marginBottom: '1rem',\n//   },\n//   description: {\n//     fontSize: '1rem',\n//     color: '#DDD', // Set your desired description text color\n//     marginBottom: '2rem',\n//   },\n//   content: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     padding: '2rem',\n//   },\n//   modalButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   modalContainer: {\n//     padding: '2rem',\n//   },\n//   modalHeading: {\n//     fontSize: '2rem',\n//     marginBottom: '1.5rem',\n//   },\n//   yogaImage: {\n//     width: '100%',\n//     marginBottom: '2rem',\n//     borderRadius: '4px',\n//   },\n//   modalForm: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   modalLabel: {\n//     textAlign: 'center', // Center the label text\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalInput: {\n//     padding: '1rem', // Increased padding\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//     borderRadius: '4px',\n//     border: '1px solid #ddd', // Set your desired input border color\n//   },\n//   modalErrorMessage: {\n//     color: 'red',\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalSubmitButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   // ... (remaining styles remain unchanged)\n// };\n\n// const customStyles = {\n//   overlay: {\n//     backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   },\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//     border: 'none',\n//     borderRadius: '2vw', // Responsive border radius based on viewport width\n//     maxWidth: '600px',\n//     width: '100%',\n//   },\n// };\n\n// export default AdmissionForm;\n\n// AdmissionForm.js\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdmissionForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 0,\n    email: '',\n    phone: '',\n    selectedBatch: ''\n  });\n  const [eligibilityMessage, setEligibilityMessage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form Data:', formData); // Log form data\n\n    if (formData.age < 18 || formData.age > 65) {\n      setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n      // Automatically close the form modal after 3000 milliseconds (3 seconds)\n      setTimeout(() => {\n        setIsModalOpen(false);\n      }, 3000);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n\n      // Assuming your API response structure includes a 'success' property\n      console.log('Response:', result); // Log the response\n\n      if (result.success) {\n        // Payment successful logic\n        setEligibilityMessage('Payment successful!');\n\n        // Automatically close the form modal after 3000 milliseconds (3 seconds)\n        setTimeout(() => {\n          setIsModalOpen(false);\n        }, 3000);\n      } else {\n        // Payment failed logic\n        setEligibilityMessage('Payment failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.name === 'age' ? parseInt(e.target.value, 10) : e.target.value\n    });\n  };\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      fontFamily: 'Arial, sans-serif'\n    },\n    header: {\n      textAlign: 'center'\n    },\n    title: {\n      fontSize: '2rem',\n      marginBottom: '0.5rem'\n    },\n    description: {\n      fontSize: '1rem',\n      color: '#666'\n    },\n    content: {\n      marginTop: '2rem'\n    },\n    modalButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px'\n    },\n    modalContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '2rem'\n    },\n    modalHeading: {\n      fontSize: '1.5rem',\n      marginBottom: '1rem'\n    },\n    yogaImage: {\n      width: '100%',\n      maxWidth: '400px',\n      borderRadius: '8px',\n      marginBottom: '1rem'\n    },\n    modalForm: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%'\n    },\n    modalLabel: {\n      marginBottom: '0.5rem',\n      fontSize: '1rem',\n      textAlign: 'left',\n      width: '100%'\n    },\n    modalInput: {\n      padding: '0.5rem',\n      marginBottom: '1rem',\n      fontSize: '1rem',\n      width: '100%',\n      border: '1px solid #ccc',\n      borderRadius: '4px'\n    },\n    modalSubmitButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px'\n    },\n    modalErrorMessage: {\n      color: '#FF0000',\n      marginBottom: '1rem'\n    }\n  };\n  const customStyles = {\n    content: {\n      width: '80%',\n      maxWidth: '400px',\n      margin: 'auto'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.title,\n        children: \"Yoga Class Admission App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Enroll in our yoga classes for a healthy and mindful lifestyle.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        style: styles.modalButton,\n        children: \"Open 3D Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Admission Form Modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.modalContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: styles.modalHeading,\n            children: \"Admission Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n            ,\n            alt: \"Yoga\",\n            style: styles.yogaImage,\n            onLoad: () => console.log('Image loaded successfully'),\n            onError: () => console.error('Error loading image')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            style: styles.modalForm,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.modalLabel,\n              children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleChange,\n                style: styles.modalInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.modalLabel,\n              children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"age\",\n                value: formData.age,\n                onChange: handleChange,\n                style: styles.modalInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.modalLabel,\n              children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleChange,\n                style: styles.modalInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.modalLabel,\n              children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"phone\",\n                value: formData.phone,\n                onChange: handleChange,\n                style: styles.modalInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.modalLabel,\n              children: [\"Select Batch:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"selectedBatch\",\n                value: formData.selectedBatch,\n                onChange: handleChange,\n                style: styles.modalInput,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Batch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6-7AM\",\n                  children: \"6-7AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"7-8AM\",\n                  children: \"7-8AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"8-9AM\",\n                  children: \"8-9AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5-6PM\",\n                  children: \"5-6PM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), eligibilityMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.modalErrorMessage,\n              children: eligibilityMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: styles.modalSubmitButton,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this);\n};\n_s(AdmissionForm, \"LoX8JVK843x576k9CDhm3GGUies=\");\n_c = AdmissionForm;\nexport default AdmissionForm;\nvar _c;\n$RefreshReg$(_c, \"AdmissionForm\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","AdmissionForm","_s","formData","setFormData","name","age","email","phone","selectedBatch","eligibilityMessage","setEligibilityMessage","isModalOpen","setIsModalOpen","openModal","closeModal","handleSubmit","e","preventDefault","console","log","setTimeout","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","success","error","handleChange","target","parseInt","value","styles","container","display","flexDirection","alignItems","justifyContent","height","fontFamily","header","textAlign","title","fontSize","marginBottom","description","color","content","marginTop","modalButton","padding","cursor","backgroundColor","border","borderRadius","modalContainer","modalHeading","yogaImage","width","maxWidth","modalForm","modalLabel","modalInput","modalSubmitButton","modalErrorMessage","customStyles","margin","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","src","alt","onLoad","onError","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/yuvrajaggarwal/Desktop/Task/yoga-admission-form/client/src/AdmissionForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n\n// const AdmissionForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     age: 0,\n//     selectedBatch: '',\n//     email: '',\n//     phoneNumber: '',\n//   });\n\n//   const [eligibilityMessage, setEligibilityMessage] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     console.log('Form Data:', formData); // Log form data\n\n//     // Validation\n//     if (!formData.name || !formData.email || !formData.phoneNumber) {\n//       setEligibilityMessage('Please fill in all required fields.');\n//       return;\n//     }\n\n//     if (formData.age < 18 || formData.age > 65) {\n//       setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n//       // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//       setTimeout(() => {\n//         setIsModalOpen(false);\n//       }, 3000);\n\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3001/submitForm', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const result = await response.json();\n\n//       // Assuming your API response structure includes a 'success' property\n//       console.log('Response:', result); // Log the response\n\n//       if (result.success) {\n//         // Payment successful logic\n//         setEligibilityMessage('Payment successful!');\n\n//         // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//         setTimeout(() => {\n//           setIsModalOpen(false);\n//         }, 3000);\n//       } else {\n//         // Payment failed logic\n//         setEligibilityMessage('Payment failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <header style={styles.header}>\n//         <h1 style={styles.title}>Yoga Class Admission App</h1>\n//         <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n//       </header>\n\n//       <div style={styles.content}>\n//         <button onClick={openModal} style={styles.modalButton}>\n//           Open 3D Form\n//         </button>\n\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={customStyles}\n//           contentLabel=\"Admission Form Modal\"\n//         >\n//           <div style={styles.modalContainer}>\n//             <h2 style={styles.modalHeading}>Admission Form</h2>\n\n//             {/* Yoga Picture */}\n//             <img\n//               src=\"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n//               alt=\"Yoga\"\n//               style={styles.yogaImage}\n//               onLoad={() => console.log('Image loaded successfully')}\n//               onError={() => console.error('Error loading image')}\n//             />\n\n//             <form onSubmit={handleSubmit} style={styles.modalForm}>\n//               <label style={styles.modalLabel}>\n//                 Name:\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Age:\n//                 <input\n//                   type=\"number\"\n//                   name=\"age\"\n//                   value={formData.age}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Email:\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Phone Number:\n//                 <input\n//                   type=\"tel\"\n//                   name=\"phoneNumber\"\n//                   value={formData.phoneNumber}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Select Batch:\n//                 <select\n//                   name=\"selectedBatch\"\n//                   value={formData.selectedBatch}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 >\n//                   <option value=\"\">Select Batch</option>\n//                   <option value=\"6-7AM\">6-7AM</option>\n//                   <option value=\"7-8AM\">7-8AM</option>\n//                   <option value=\"8-9AM\">8-9AM</option>\n//                   <option value=\"5-6PM\">5-6PM</option>\n//                 </select>\n//               </label>\n//               {eligibilityMessage && <p style={styles.modalErrorMessage}>{eligibilityMessage}</p>}\n//               <button type=\"submit\" style={styles.modalSubmitButton}>\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     backgroundColor: '#F2F2F2', // Set your desired background color\n//   },\n//   header: {\n//     textAlign: 'center',\n//     padding: '2rem',\n//     backgroundColor: '#4CAF50', // Set your desired header background color\n//     color: 'white', // Set your desired header text color\n//   },\n//   title: {\n//     fontSize: '2rem',\n//     marginBottom: '1rem',\n//   },\n//   description: {\n//     fontSize: '1rem',\n//     color: '#DDD', // Set your desired description text color\n//     marginBottom: '2rem',\n//   },\n//   content: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     padding: '2rem',\n//   },\n//   modalButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   modalContainer: {\n//     padding: '2rem',\n//   },\n//   modalHeading: {\n//     fontSize: '2rem',\n//     marginBottom: '1.5rem',\n//   },\n//   yogaImage: {\n//     width: '100%',\n//     marginBottom: '2rem',\n//     borderRadius: '4px',\n//   },\n//   modalForm: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   modalLabel: {\n//     textAlign: 'center', // Center the label text\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalInput: {\n//     padding: '1rem', // Increased padding\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//     borderRadius: '4px',\n//     border: '1px solid #ddd', // Set your desired input border color\n//   },\n//   modalErrorMessage: {\n//     color: 'red',\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalSubmitButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   // ... (remaining styles remain unchanged)\n// };\n\n// const customStyles = {\n//   overlay: {\n//     backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   },\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//     border: 'none',\n//     borderRadius: '2vw', // Responsive border radius based on viewport width\n//     maxWidth: '600px',\n//     width: '100%',\n//   },\n// };\n\n// export default AdmissionForm;\n\n// AdmissionForm.js\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nconst AdmissionForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 0,\n    email: '',\n    phone: '',\n    selectedBatch: '',\n  });\n\n  const [eligibilityMessage, setEligibilityMessage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log('Form Data:', formData); // Log form data\n\n    if (formData.age < 18 || formData.age > 65) {\n      setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n      // Automatically close the form modal after 3000 milliseconds (3 seconds)\n      setTimeout(() => {\n        setIsModalOpen(false);\n      }, 3000);\n\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:3001/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const result = await response.json();\n\n      // Assuming your API response structure includes a 'success' property\n      console.log('Response:', result); // Log the response\n\n      if (result.success) {\n        // Payment successful logic\n        setEligibilityMessage('Payment successful!');\n\n        // Automatically close the form modal after 3000 milliseconds (3 seconds)\n        setTimeout(() => {\n          setIsModalOpen(false);\n        }, 3000);\n      } else {\n        // Payment failed logic\n        setEligibilityMessage('Payment failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.name === 'age' ? parseInt(e.target.value, 10) : e.target.value,\n    });\n  };\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      fontFamily: 'Arial, sans-serif',\n    },\n    header: {\n      textAlign: 'center',\n    },\n    title: {\n      fontSize: '2rem',\n      marginBottom: '0.5rem',\n    },\n    description: {\n      fontSize: '1rem',\n      color: '#666',\n    },\n    content: {\n      marginTop: '2rem',\n    },\n    modalButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n    },\n    modalContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '2rem',\n    },\n    modalHeading: {\n      fontSize: '1.5rem',\n      marginBottom: '1rem',\n    },\n    yogaImage: {\n      width: '100%',\n      maxWidth: '400px',\n      borderRadius: '8px',\n      marginBottom: '1rem',\n    },\n    modalForm: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%',\n    },\n    modalLabel: {\n      marginBottom: '0.5rem',\n      fontSize: '1rem',\n      textAlign: 'left',\n      width: '100%',\n    },\n    modalInput: {\n      padding: '0.5rem',\n      marginBottom: '1rem',\n      fontSize: '1rem',\n      width: '100%',\n      border: '1px solid #ccc',\n      borderRadius: '4px',\n    },\n    modalSubmitButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n    },\n    modalErrorMessage: {\n      color: '#FF0000',\n      marginBottom: '1rem',\n    },\n  };\n\n  const customStyles = {\n    content: {\n      width: '80%',\n      maxWidth: '400px',\n      margin: 'auto',\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <header style={styles.header}>\n        <h1 style={styles.title}>Yoga Class Admission App</h1>\n        <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n      </header>\n\n      <div style={styles.content}>\n        <button onClick={openModal} style={styles.modalButton}>\n          Open 3D Form\n        </button>\n\n        <Modal\n          isOpen={isModalOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Admission Form Modal\"\n        >\n          <div style={styles.modalContainer}>\n            <h2 style={styles.modalHeading}>Admission Form</h2>\n\n            {/* Yoga Picture */}\n            <img\n              src=\"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n              alt=\"Yoga\"\n              style={styles.yogaImage}\n              onLoad={() => console.log('Image loaded successfully')}\n              onError={() => console.error('Error loading image')}\n            />\n\n            <form onSubmit={handleSubmit} style={styles.modalForm}>\n              <label style={styles.modalLabel}>\n                Name:\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  style={styles.modalInput}\n                />\n              </label>\n              <label style={styles.modalLabel}>\n                Age:\n                <input\n                  type=\"number\"\n                  name=\"age\"\n                  value={formData.age}\n                  onChange={handleChange}\n                  style={styles.modalInput}\n                />\n              </label>\n              <label style={styles.modalLabel}>\n                Email:\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  style={styles.modalInput}\n                />\n              </label>\n              <label style={styles.modalLabel}>\n                Phone:\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  style={styles.modalInput}\n                />\n              </label>\n              <label style={styles.modalLabel}>\n                Select Batch:\n                <select\n                  name=\"selectedBatch\"\n                  value={formData.selectedBatch}\n                  onChange={handleChange}\n                  style={styles.modalInput}\n                >\n                  <option value=\"\">Select Batch</option>\n                  <option value=\"6-7AM\">6-7AM</option>\n                  <option value=\"7-8AM\">7-8AM</option>\n                  <option value=\"8-9AM\">8-9AM</option>\n                  <option value=\"5-6PM\">5-6PM</option>\n                </select>\n              </label>\n              {eligibilityMessage && <p style={styles.modalErrorMessage}>{eligibilityMessage}</p>}\n              <button type=\"submit\" style={styles.modalSubmitButton}>\n                Submit\n              </button>\n            </form>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default AdmissionForm;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}