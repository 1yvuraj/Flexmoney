{"ast":null,"code":"var _jsxFileName = \"/Users/yuvrajaggarwal/Desktop/Task/yoga-admission-form/client/src/AdmissionForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n\n// const AdmissionForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     age: 0,\n//     selectedBatch: '',\n//     email: '',\n//     phoneNumber: '',\n//   });\n\n//   const [eligibilityMessage, setEligibilityMessage] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     console.log('Form Data:', formData); // Log form data\n\n//     // Validation\n//     if (!formData.name || !formData.email || !formData.phoneNumber) {\n//       setEligibilityMessage('Please fill in all required fields.');\n//       return;\n//     }\n\n//     if (formData.age < 18 || formData.age > 65) {\n//       setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n//       // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//       setTimeout(() => {\n//         setIsModalOpen(false);\n//       }, 3000);\n\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3001/submitForm', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const result = await response.json();\n\n//       // Assuming your API response structure includes a 'success' property\n//       console.log('Response:', result); // Log the response\n\n//       if (result.success) {\n//         // Payment successful logic\n//         setEligibilityMessage('Payment successful!');\n\n//         // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//         setTimeout(() => {\n//           setIsModalOpen(false);\n//         }, 3000);\n//       } else {\n//         // Payment failed logic\n//         setEligibilityMessage('Payment failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <header style={styles.header}>\n//         <h1 style={styles.title}>Yoga Class Admission App</h1>\n//         <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n//       </header>\n\n//       <div style={styles.content}>\n//         <button onClick={openModal} style={styles.modalButton}>\n//           Open 3D Form\n//         </button>\n\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={customStyles}\n//           contentLabel=\"Admission Form Modal\"\n//         >\n//           <div style={styles.modalContainer}>\n//             <h2 style={styles.modalHeading}>Admission Form</h2>\n\n//             {/* Yoga Picture */}\n//             <img\n//               src=\"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n//               alt=\"Yoga\"\n//               style={styles.yogaImage}\n//               onLoad={() => console.log('Image loaded successfully')}\n//               onError={() => console.error('Error loading image')}\n//             />\n\n//             <form onSubmit={handleSubmit} style={styles.modalForm}>\n//               <label style={styles.modalLabel}>\n//                 Name:\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Age:\n//                 <input\n//                   type=\"number\"\n//                   name=\"age\"\n//                   value={formData.age}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Email:\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Phone Number:\n//                 <input\n//                   type=\"tel\"\n//                   name=\"phoneNumber\"\n//                   value={formData.phoneNumber}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Select Batch:\n//                 <select\n//                   name=\"selectedBatch\"\n//                   value={formData.selectedBatch}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 >\n//                   <option value=\"\">Select Batch</option>\n//                   <option value=\"6-7AM\">6-7AM</option>\n//                   <option value=\"7-8AM\">7-8AM</option>\n//                   <option value=\"8-9AM\">8-9AM</option>\n//                   <option value=\"5-6PM\">5-6PM</option>\n//                 </select>\n//               </label>\n//               {eligibilityMessage && <p style={styles.modalErrorMessage}>{eligibilityMessage}</p>}\n//               <button type=\"submit\" style={styles.modalSubmitButton}>\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     backgroundColor: '#F2F2F2', // Set your desired background color\n//   },\n//   header: {\n//     textAlign: 'center',\n//     padding: '2rem',\n//     backgroundColor: '#4CAF50', // Set your desired header background color\n//     color: 'white', // Set your desired header text color\n//   },\n//   title: {\n//     fontSize: '2rem',\n//     marginBottom: '1rem',\n//   },\n//   description: {\n//     fontSize: '1rem',\n//     color: '#DDD', // Set your desired description text color\n//     marginBottom: '2rem',\n//   },\n//   content: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     padding: '2rem',\n//   },\n//   modalButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   modalContainer: {\n//     padding: '2rem',\n//   },\n//   modalHeading: {\n//     fontSize: '2rem',\n//     marginBottom: '1.5rem',\n//   },\n//   yogaImage: {\n//     width: '100%',\n//     marginBottom: '2rem',\n//     borderRadius: '4px',\n//   },\n//   modalForm: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   modalLabel: {\n//     textAlign: 'center', // Center the label text\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalInput: {\n//     padding: '1rem', // Increased padding\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//     borderRadius: '4px',\n//     border: '1px solid #ddd', // Set your desired input border color\n//   },\n//   modalErrorMessage: {\n//     color: 'red',\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalSubmitButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   // ... (remaining styles remain unchanged)\n// };\n\n// const customStyles = {\n//   overlay: {\n//     backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   },\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//     border: 'none',\n//     borderRadius: '2vw', // Responsive border radius based on viewport width\n//     maxWidth: '600px',\n//     width: '100%',\n//   },\n// };\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdmissionForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 0,\n    email: '',\n    phone: '',\n    selectedBatch: ''\n  });\n  const [eligibilityMessage, setEligibilityMessage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    resetForm();\n  };\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      age: 0,\n      email: '',\n      phone: '',\n      selectedBatch: ''\n    });\n    setEligibilityMessage('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.age < 18 || formData.age > 65) {\n      setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n      setTimeout(() => {\n        setIsModalOpen(false);\n      }, 3000);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log('Response:', result);\n      if (result.success) {\n        setEligibilityMessage('Payment successful!');\n        setTimeout(() => {\n          setIsModalOpen(false);\n          resetForm();\n        }, 3000);\n      } else {\n        setEligibilityMessage('Payment failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.name === 'age' ? parseInt(e.target.value, 10) : e.target.value\n    });\n  };\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: 'powderblue',\n      padding: '20px'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '20px',\n      color: '#333'\n    },\n    title: {\n      fontSize: '2rem',\n      marginBottom: '0.5rem'\n    },\n    description: {\n      fontSize: '1rem',\n      color: '#666'\n    },\n    content: {\n      marginTop: '2rem',\n      width: '100%',\n      maxWidth: '800px',\n      margin: 'auto',\n      textAlign: 'center' // Center the content\n    },\n    modalButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      display: 'block',\n      margin: 'auto' // Center the button\n    }\n    // ... (other styles)\n  };\n  const customStyles = {\n    content: {\n      width: '80%',\n      maxWidth: '400px',\n      margin: 'auto',\n      borderRadius: '8px',\n      boxShadow: '0 0 20px rgba(0, 0, 0, 0.2)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.title,\n        children: \"Yoga Class Admission App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Enroll in our yoga classes for a healthy and mindful lifestyle.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        style: styles.modalButton,\n        children: \"Open 3D Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Admission Form Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.benefitSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.benefitTitle,\n          children: \"Yoga Benefits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.benefitText,\n          children: \"Experience improved flexibility, balance, and mental well-being through our yoga classes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: styles.footer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2023 Yoga Class Admission App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n};\n_s(AdmissionForm, \"LoX8JVK843x576k9CDhm3GGUies=\");\n_c = AdmissionForm;\nexport default AdmissionForm;\nvar _c;\n$RefreshReg$(_c, \"AdmissionForm\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","AdmissionForm","_s","formData","setFormData","name","age","email","phone","selectedBatch","eligibilityMessage","setEligibilityMessage","isModalOpen","setIsModalOpen","openModal","closeModal","resetForm","handleSubmit","e","preventDefault","setTimeout","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","success","error","handleChange","target","parseInt","value","styles","container","display","flexDirection","alignItems","justifyContent","minHeight","fontFamily","backgroundColor","padding","header","textAlign","marginBottom","color","title","fontSize","description","content","marginTop","width","maxWidth","margin","modalButton","cursor","border","borderRadius","customStyles","boxShadow","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","benefitSection","benefitTitle","benefitText","footer","_c","$RefreshReg$"],"sources":["/Users/yuvrajaggarwal/Desktop/Task/yoga-admission-form/client/src/AdmissionForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n\n// const AdmissionForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     age: 0,\n//     selectedBatch: '',\n//     email: '',\n//     phoneNumber: '',\n//   });\n\n//   const [eligibilityMessage, setEligibilityMessage] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     console.log('Form Data:', formData); // Log form data\n\n//     // Validation\n//     if (!formData.name || !formData.email || !formData.phoneNumber) {\n//       setEligibilityMessage('Please fill in all required fields.');\n//       return;\n//     }\n\n//     if (formData.age < 18 || formData.age > 65) {\n//       setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n//       // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//       setTimeout(() => {\n//         setIsModalOpen(false);\n//       }, 3000);\n\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3001/submitForm', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n\n//       const result = await response.json();\n\n//       // Assuming your API response structure includes a 'success' property\n//       console.log('Response:', result); // Log the response\n\n//       if (result.success) {\n//         // Payment successful logic\n//         setEligibilityMessage('Payment successful!');\n\n//         // Automatically close the form modal after 3000 milliseconds (3 seconds)\n//         setTimeout(() => {\n//           setIsModalOpen(false);\n//         }, 3000);\n//       } else {\n//         // Payment failed logic\n//         setEligibilityMessage('Payment failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <header style={styles.header}>\n//         <h1 style={styles.title}>Yoga Class Admission App</h1>\n//         <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n//       </header>\n\n//       <div style={styles.content}>\n//         <button onClick={openModal} style={styles.modalButton}>\n//           Open 3D Form\n//         </button>\n\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={customStyles}\n//           contentLabel=\"Admission Form Modal\"\n//         >\n//           <div style={styles.modalContainer}>\n//             <h2 style={styles.modalHeading}>Admission Form</h2>\n\n//             {/* Yoga Picture */}\n//             <img\n//               src=\"https://i.imgur.com/xyz123.jpg\" // Replace this URL with your actual yoga image URL\n//               alt=\"Yoga\"\n//               style={styles.yogaImage}\n//               onLoad={() => console.log('Image loaded successfully')}\n//               onError={() => console.error('Error loading image')}\n//             />\n\n//             <form onSubmit={handleSubmit} style={styles.modalForm}>\n//               <label style={styles.modalLabel}>\n//                 Name:\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Age:\n//                 <input\n//                   type=\"number\"\n//                   name=\"age\"\n//                   value={formData.age}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Email:\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Phone Number:\n//                 <input\n//                   type=\"tel\"\n//                   name=\"phoneNumber\"\n//                   value={formData.phoneNumber}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 />\n//               </label>\n//               <label style={styles.modalLabel}>\n//                 Select Batch:\n//                 <select\n//                   name=\"selectedBatch\"\n//                   value={formData.selectedBatch}\n//                   onChange={handleChange}\n//                   style={styles.modalInput}\n//                 >\n//                   <option value=\"\">Select Batch</option>\n//                   <option value=\"6-7AM\">6-7AM</option>\n//                   <option value=\"7-8AM\">7-8AM</option>\n//                   <option value=\"8-9AM\">8-9AM</option>\n//                   <option value=\"5-6PM\">5-6PM</option>\n//                 </select>\n//               </label>\n//               {eligibilityMessage && <p style={styles.modalErrorMessage}>{eligibilityMessage}</p>}\n//               <button type=\"submit\" style={styles.modalSubmitButton}>\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     backgroundColor: '#F2F2F2', // Set your desired background color\n//   },\n//   header: {\n//     textAlign: 'center',\n//     padding: '2rem',\n//     backgroundColor: '#4CAF50', // Set your desired header background color\n//     color: 'white', // Set your desired header text color\n//   },\n//   title: {\n//     fontSize: '2rem',\n//     marginBottom: '1rem',\n//   },\n//   description: {\n//     fontSize: '1rem',\n//     color: '#DDD', // Set your desired description text color\n//     marginBottom: '2rem',\n//   },\n//   content: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     padding: '2rem',\n//   },\n//   modalButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   modalContainer: {\n//     padding: '2rem',\n//   },\n//   modalHeading: {\n//     fontSize: '2rem',\n//     marginBottom: '1.5rem',\n//   },\n//   yogaImage: {\n//     width: '100%',\n//     marginBottom: '2rem',\n//     borderRadius: '4px',\n//   },\n//   modalForm: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   modalLabel: {\n//     textAlign: 'center', // Center the label text\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalInput: {\n//     padding: '1rem', // Increased padding\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//     borderRadius: '4px',\n//     border: '1px solid #ddd', // Set your desired input border color\n//   },\n//   modalErrorMessage: {\n//     color: 'red',\n//     marginBottom: '1rem',\n//     fontSize: '1rem',\n//   },\n//   modalSubmitButton: {\n//     padding: '1rem',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     border: 'none',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     borderRadius: '4px',\n//   },\n//   // ... (remaining styles remain unchanged)\n// };\n\n// const customStyles = {\n//   overlay: {\n//     backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   },\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//     border: 'none',\n//     borderRadius: '2vw', // Responsive border radius based on viewport width\n//     maxWidth: '600px',\n//     width: '100%',\n//   },\n// };\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nconst AdmissionForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 0,\n    email: '',\n    phone: '',\n    selectedBatch: '',\n  });\n\n  const [eligibilityMessage, setEligibilityMessage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      age: 0,\n      email: '',\n      phone: '',\n      selectedBatch: '',\n    });\n    setEligibilityMessage('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (formData.age < 18 || formData.age > 65) {\n      setEligibilityMessage('You are not eligible. Age must be between 18 and 65.');\n\n      setTimeout(() => {\n        setIsModalOpen(false);\n      }, 3000);\n\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:3001/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const result = await response.json();\n\n      console.log('Response:', result);\n\n      if (result.success) {\n        setEligibilityMessage('Payment successful!');\n\n        setTimeout(() => {\n          setIsModalOpen(false);\n          resetForm();\n        }, 3000);\n      } else {\n        setEligibilityMessage('Payment failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.name === 'age' ? parseInt(e.target.value, 10) : e.target.value,\n    });\n  };\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: 'powderblue',\n      padding: '20px',\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: '20px',\n      color: '#333',\n    },\n    title: {\n      fontSize: '2rem',\n      marginBottom: '0.5rem',\n    },\n    description: {\n      fontSize: '1rem',\n      color: '#666',\n    },\n    content: {\n      marginTop: '2rem',\n      width: '100%',\n      maxWidth: '800px',\n      margin: 'auto',\n      textAlign: 'center', // Center the content\n    },\n    modalButton: {\n      padding: '1rem',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      display: 'block',\n      margin: 'auto', // Center the button\n    },\n    // ... (other styles)\n  };\n\n  const customStyles = {\n    content: {\n      width: '80%',\n      maxWidth: '400px',\n      margin: 'auto',\n      borderRadius: '8px',\n      boxShadow: '0 0 20px rgba(0, 0, 0, 0.2)',\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <header style={styles.header}>\n        <h1 style={styles.title}>Yoga Class Admission App</h1>\n        <p style={styles.description}>Enroll in our yoga classes for a healthy and mindful lifestyle.</p>\n      </header>\n\n      <div style={styles.content}>\n        <button onClick={openModal} style={styles.modalButton}>\n          Open 3D Form\n        </button>\n\n        <Modal\n          isOpen={isModalOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Admission Form Modal\"\n        >\n          {/* ... (modal content) */}\n        </Modal>\n\n        <div style={styles.benefitSection}>\n          <h2 style={styles.benefitTitle}>Yoga Benefits</h2>\n          <p style={styles.benefitText}>\n            Experience improved flexibility, balance, and mental well-being through our yoga classes.\n          </p>\n        </div>\n      </div>\n\n      <footer style={styles.footer}>\n        <p>&copy; 2023 Yoga Class Admission App</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default AdmissionForm;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}